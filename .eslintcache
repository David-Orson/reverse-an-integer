[{"C:\\Users\\Cex\\Desktop\\Mother Folder\\Coding\\Coding Challenges\\Reverse an integer\\reverse-an-integer\\src\\index.js":"1","C:\\Users\\Cex\\Desktop\\Mother Folder\\Coding\\Coding Challenges\\Reverse an integer\\reverse-an-integer\\src\\App.js":"2","C:\\Users\\Cex\\Desktop\\Mother Folder\\Coding\\Coding Challenges\\Reverse an integer\\reverse-an-integer\\src\\components\\Header.js":"3","C:\\Users\\Cex\\Desktop\\Mother Folder\\Coding\\Coding Challenges\\Reverse an integer\\reverse-an-integer\\src\\components\\Input.js":"4","C:\\Users\\Cex\\Desktop\\Mother Folder\\Coding\\Coding Challenges\\Reverse an integer\\reverse-an-integer\\src\\components\\Code.js":"5","C:\\Users\\Cex\\Desktop\\Mother Folder\\Coding\\Coding Challenges\\Reverse an integer\\reverse-an-integer\\src\\components\\Output.js":"6","C:\\Users\\Cex\\Desktop\\Mother Folder\\Coding\\Coding Challenges\\Reverse an integer\\reverse-an-integer\\src\\components\\Explanation.js":"7"},{"size":150,"mtime":1607465325716,"results":"8","hashOfConfig":"9"},{"size":1049,"mtime":1607468602189,"results":"10","hashOfConfig":"9"},{"size":230,"mtime":1607465719287,"results":"11","hashOfConfig":"9"},{"size":614,"mtime":1607468740284,"results":"12","hashOfConfig":"9"},{"size":2290,"mtime":1607471266237,"results":"13","hashOfConfig":"9"},{"size":303,"mtime":1607468756572,"results":"14","hashOfConfig":"9"},{"size":5621,"mtime":1607651701404,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ozz2c8",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Cex\\Desktop\\Mother Folder\\Coding\\Coding Challenges\\Reverse an integer\\reverse-an-integer\\src\\index.js",[],["32","33"],"C:\\Users\\Cex\\Desktop\\Mother Folder\\Coding\\Coding Challenges\\Reverse an integer\\reverse-an-integer\\src\\App.js",[],"C:\\Users\\Cex\\Desktop\\Mother Folder\\Coding\\Coding Challenges\\Reverse an integer\\reverse-an-integer\\src\\components\\Header.js",[],"C:\\Users\\Cex\\Desktop\\Mother Folder\\Coding\\Coding Challenges\\Reverse an integer\\reverse-an-integer\\src\\components\\Input.js",[],"C:\\Users\\Cex\\Desktop\\Mother Folder\\Coding\\Coding Challenges\\Reverse an integer\\reverse-an-integer\\src\\components\\Code.js",["34"],"import React, { useState } from 'react';\r\n\r\nimport \"../css/Code.css\"\r\n\r\nimport arrowDown from \"../Assets/arrow-down.svg\"\r\n\r\nconst Code = () => {\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const toggleOpen = () => {\r\n    if (open === false) {\r\n      setOpen(true)\r\n    } else {\r\n      setOpen(false)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={`code ${(open ? ('code-opened') : (null))}`} >\r\n      <div className=\"dropdown-title-container\">\r\n        <p className=\"code-title\">Code used</p>\r\n        <img src={arrowDown} className={`arrow-down ${open ? 'arrow-open' : null}`} onClick={toggleOpen} />\r\n      </div>\r\n      \r\n      {/* {open ? ( */}<div className=\"code-dropdown\">\r\n        <p className=\"code-tagline\">The code used for the functionality of this challenge is:</p>\r\n        <div className=\"code-container\">\r\n          <p><span className=\"\"></span>\r\n            <span className=\"yellow\">const</span><span className=\"cyan\"> reverser</span> =<span className=\"purple\"> (int)</span><span className=\"yellow\"> ={\">\"}</span> <span className=\"purple\">{\"{\"}</span><br/> \r\n            <span className=\"yellow indent\">const</span><span className=\"purple\"> reversed</span> =<span className=\"purple\"> int<br/></span><span className=\"indent2\">.</span><span className=\"cyan\">toString()<br/></span><span className=\"indent2\">.</span><span className=\"cyan\">split(</span><span className=\"orange\">''</span><span className=\"cyan\">)<br/></span><span className=\"indent2\">.</span><span className=\"cyan\">reverse()<br/></span><span className=\"indent2\">.</span><span className=\"cyan\">join(</span><span className=\"orange\">''</span><span className=\"cyan\">)</span>;<br/><br/>\r\n            <span className=\"cyan indent\">setReversedInt(<br/><span className=\"indent2\">parseInt</span></span><span className=\"yellow\">(</span><span className=\"purple\">reversed</span><span className=\"yellow\">)</span> *<span className=\"purple\"> Math</span>.<span className=\"cyan\">sign</span><span className=\"yellow\">(</span><span className=\"purple\">int</span><span className=\"yellow\">)</span><span className=\"cyan\"><br/><span className=\"indent\">)</span></span>;<br/>\r\n            <span className=\"purple\">{'}'}</span>\r\n          </p>\r\n        </div>\r\n      </div> {/* : (null)} */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Code;","C:\\Users\\Cex\\Desktop\\Mother Folder\\Coding\\Coding Challenges\\Reverse an integer\\reverse-an-integer\\src\\components\\Output.js",[],"C:\\Users\\Cex\\Desktop\\Mother Folder\\Coding\\Coding Challenges\\Reverse an integer\\reverse-an-integer\\src\\components\\Explanation.js",["35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":23,"column":9,"nodeType":"42","endLine":23,"endColumn":108},{"ruleId":"40","severity":1,"message":"41","line":22,"column":9,"nodeType":"42","endLine":22,"endColumn":108},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]